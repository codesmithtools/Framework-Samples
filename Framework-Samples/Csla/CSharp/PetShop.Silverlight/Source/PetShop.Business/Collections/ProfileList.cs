//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated using CodeSmith: v5.2.2, CSLA Templates: v3.0.0.1817, CSLA Framework: v4.0.0.
//       Changes to this template will not be lost.
//
//     Template: EditableRootList.cst
//     Template website: http://code.google.com/p/codesmith/
// </autogenerated>
//------------------------------------------------------------------------------
#region Using declarations

using System;
using System.Collections.Generic;
using Csla;

#endregion

namespace PetShop.Business
{
    public partial class ProfileList
    {
        #region Authorization Rules

        protected void AddAuthorizationRules()
        {
            //Csla.Rules.BusinessRules.AddRule(typeof(ProfileList), new Csla.Rules.CommonRules.IsInRole(Csla.Rules.AuthorizationActions.CreateObject, "SomeRole"));
            //Csla.Rules.BusinessRules.AddRule(typeof(ProfileList), new Csla.Rules.CommonRules.IsInRole(Csla.Rules.AuthorizationActions.EditObject, "SomeRole"));
            //Csla.Rules.BusinessRules.AddRule(typeof(ProfileList), new Csla.Rules.CommonRules.IsInRole(Csla.Rules.AuthorizationActions.DeleteObject, "SomeRole", "SomeAdminRole"));
        }
        #endregion

        #region Custom Criteria

#if !SILVERLIGHT

        public static ProfileList GetProfileList(string username)
        {
            return DataPortal.Fetch<ProfileList>(new ProfileCriteria { Username = username });
        }

#else

        public static void GetProfileList(System.String username, EventHandler<DataPortalResult<ProfileList>> handler)
        {
            var criteria = new ProfileCriteria { Username = username };

            var dp = new DataPortal<ProfileList>();
            dp.FetchCompleted += handler;
            dp.BeginFetch(criteria);
        }

#endif

        #endregion
    }
}