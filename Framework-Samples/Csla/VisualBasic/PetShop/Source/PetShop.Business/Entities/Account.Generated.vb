'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated using CodeSmith: v5.2.3, CSLA Templates: v3.0.1.1934, CSLA Framework: v3.8.4.
'     Changes to this file will be lost after each regeneration.
'     To extend the functionality of this class, please modify the partial class 'Account.vb.
'
'     Template: EditableChild.Generated.cst
'     Template website: http://code.google.com/p/codesmith/
' </autogenerated>
'------------------------------------------------------------------------------
Option Explicit On
Option Strict On

Imports System

Imports Csla
Imports Csla.Validation
Imports Csla.Data
Imports System.Data.SqlClient

Namespace PetShop.Business
    <Serializable()> _
    Public Partial Class Account
        Inherits BusinessBase(Of Account)
    
#Region "Contructor(s)"
    
        Private Sub New()
            ' require use of factory method.
            MarkAsChild()
        End Sub
    
        Friend Sub New(ByVal accountId As System.Int32)
            Using(BypassPropertyChecks)
            LoadProperty(_accountIdProperty, accountId)
            End Using
    
            MarkAsChild()
        End Sub
    
        Friend Sub New(Byval reader As SafeDataReader)
            Map(reader)
    
            MarkAsChild()
        End Sub
#End Region    
    
#Region "Business Rules"
    
        Protected Overrides Sub AddBusinessRules()
    
            If AddBusinessValidationRules() Then Exit Sub
    
            ValidationRules.AddRule(AddressOf CommonRules.StringRequired, _emailProperty)
            ValidationRules.AddRule(AddressOf CommonRules.StringMaxLength, New CommonRules.MaxLengthRuleArgs(_emailProperty, 80))
            ValidationRules.AddRule(AddressOf CommonRules.StringRequired, _firstNameProperty)
            ValidationRules.AddRule(AddressOf CommonRules.StringMaxLength, New CommonRules.MaxLengthRuleArgs(_firstNameProperty, 80))
            ValidationRules.AddRule(AddressOf CommonRules.StringRequired, _lastNameProperty)
            ValidationRules.AddRule(AddressOf CommonRules.StringMaxLength, New CommonRules.MaxLengthRuleArgs(_lastNameProperty, 80))
            ValidationRules.AddRule(AddressOf CommonRules.StringRequired, _address1Property)
            ValidationRules.AddRule(AddressOf CommonRules.StringMaxLength, New CommonRules.MaxLengthRuleArgs(_address1Property, 80))
            ValidationRules.AddRule(AddressOf CommonRules.StringMaxLength, New CommonRules.MaxLengthRuleArgs(_address2Property, 80))
            ValidationRules.AddRule(AddressOf CommonRules.StringRequired, _cityProperty)
            ValidationRules.AddRule(AddressOf CommonRules.StringMaxLength, New CommonRules.MaxLengthRuleArgs(_cityProperty, 80))
            ValidationRules.AddRule(AddressOf CommonRules.StringRequired, _stateProperty)
            ValidationRules.AddRule(AddressOf CommonRules.StringMaxLength, New CommonRules.MaxLengthRuleArgs(_stateProperty, 80))
            ValidationRules.AddRule(AddressOf CommonRules.StringRequired, _zipProperty)
            ValidationRules.AddRule(AddressOf CommonRules.StringMaxLength, New CommonRules.MaxLengthRuleArgs(_zipProperty, 20))
            ValidationRules.AddRule(AddressOf CommonRules.StringRequired, _countryProperty)
            ValidationRules.AddRule(AddressOf CommonRules.StringMaxLength, New CommonRules.MaxLengthRuleArgs(_countryProperty, 20))
            ValidationRules.AddRule(AddressOf CommonRules.StringMaxLength, New CommonRules.MaxLengthRuleArgs(_phoneProperty, 20))
        End Sub
    
#End Region

#Region "Properties"
    
        Private Shared ReadOnly _accountIdProperty As PropertyInfo(Of System.Int32) = RegisterProperty(Of System.Int32)(Function(p As Account) p.AccountId, String.Empty)
        
		<System.ComponentModel.DataObjectField(true, true)> _
        Public Property AccountId() As System.Int32
            Get 
                Return GetProperty(_accountIdProperty)
            End Get
            Friend Set (ByVal value As System.Int32)
                SetProperty(_accountIdProperty, value)
            End Set
        End Property

        Private Shared ReadOnly _uniqueIDProperty As PropertyInfo(Of System.Int32) = RegisterProperty(Of System.Int32)(Function(p As Account) p.UniqueID, String.Empty)
        
        Public Property UniqueID() As System.Int32
            Get 
                Return GetProperty(_uniqueIDProperty)
            End Get
            Set (ByVal value As System.Int32)
                SetProperty(_uniqueIDProperty, value)
            End Set
        End Property

        Private Shared ReadOnly _emailProperty As PropertyInfo(Of System.String) = RegisterProperty(Of System.String)(Function(p As Account) p.Email, String.Empty)
        
        Public Property Email() As System.String
            Get 
                Return GetProperty(_emailProperty)
            End Get
            Set (ByVal value As System.String)
                SetProperty(_emailProperty, value)
            End Set
        End Property

        Private Shared ReadOnly _firstNameProperty As PropertyInfo(Of System.String) = RegisterProperty(Of System.String)(Function(p As Account) p.FirstName, String.Empty)
        
        Public Property FirstName() As System.String
            Get 
                Return GetProperty(_firstNameProperty)
            End Get
            Set (ByVal value As System.String)
                SetProperty(_firstNameProperty, value)
            End Set
        End Property

        Private Shared ReadOnly _lastNameProperty As PropertyInfo(Of System.String) = RegisterProperty(Of System.String)(Function(p As Account) p.LastName, String.Empty)
        
        Public Property LastName() As System.String
            Get 
                Return GetProperty(_lastNameProperty)
            End Get
            Set (ByVal value As System.String)
                SetProperty(_lastNameProperty, value)
            End Set
        End Property

        Private Shared ReadOnly _address1Property As PropertyInfo(Of System.String) = RegisterProperty(Of System.String)(Function(p As Account) p.Address1, String.Empty)
        
        Public Property Address1() As System.String
            Get 
                Return GetProperty(_address1Property)
            End Get
            Set (ByVal value As System.String)
                SetProperty(_address1Property, value)
            End Set
        End Property

        Private Shared ReadOnly _address2Property As PropertyInfo(Of System.String) = RegisterProperty(Of System.String)(Function(p As Account) p.Address2, String.Empty, vbNullString)
        
        Public Property Address2() As System.String
            Get 
                Return GetProperty(_address2Property)
            End Get
            Set (ByVal value As System.String)
                SetProperty(_address2Property, value)
            End Set
        End Property

        Private Shared ReadOnly _cityProperty As PropertyInfo(Of System.String) = RegisterProperty(Of System.String)(Function(p As Account) p.City, String.Empty)
        
        Public Property City() As System.String
            Get 
                Return GetProperty(_cityProperty)
            End Get
            Set (ByVal value As System.String)
                SetProperty(_cityProperty, value)
            End Set
        End Property

        Private Shared ReadOnly _stateProperty As PropertyInfo(Of System.String) = RegisterProperty(Of System.String)(Function(p As Account) p.State, String.Empty)
        
        Public Property State() As System.String
            Get 
                Return GetProperty(_stateProperty)
            End Get
            Set (ByVal value As System.String)
                SetProperty(_stateProperty, value)
            End Set
        End Property

        Private Shared ReadOnly _zipProperty As PropertyInfo(Of System.String) = RegisterProperty(Of System.String)(Function(p As Account) p.Zip, String.Empty)
        
        Public Property Zip() As System.String
            Get 
                Return GetProperty(_zipProperty)
            End Get
            Set (ByVal value As System.String)
                SetProperty(_zipProperty, value)
            End Set
        End Property

        Private Shared ReadOnly _countryProperty As PropertyInfo(Of System.String) = RegisterProperty(Of System.String)(Function(p As Account) p.Country, String.Empty)
        
        Public Property Country() As System.String
            Get 
                Return GetProperty(_countryProperty)
            End Get
            Set (ByVal value As System.String)
                SetProperty(_countryProperty, value)
            End Set
        End Property

        Private Shared ReadOnly _phoneProperty As PropertyInfo(Of System.String) = RegisterProperty(Of System.String)(Function(p As Account) p.Phone, String.Empty, vbNullString)
        
        Public Property Phone() As System.String
            Get 
                Return GetProperty(_phoneProperty)
            End Get
            Set (ByVal value As System.String)
                SetProperty(_phoneProperty, value)
            End Set
        End Property

        'AssociatedManyToOne
        Private Shared ReadOnly _profileMemberProperty As PropertyInfo(Of Profile) = RegisterProperty(Of Profile)(Function(p As Account) p.ProfileMember, Csla.RelationshipTypes.Child)
        Public ReadOnly Property ProfileMember() As Profile
            Get
                Dim cancel As Boolean = False
                OnChildLoading(_profileMemberProperty, cancel)
                
                If Not cancel Then
                    If(False) Then
                        Return Nothing
                    End If
    
                    If Not(FieldManager.FieldExists(_profileMemberProperty))
                        Dim criteria As New PetShop.Business.ProfileCriteria()
                        criteria.UniqueID = UniqueID

                        If (PetShop.Business.Profile.Exists(criteria)) Then
                            LoadProperty(_profileMemberProperty, PetShop.Business.Profile.GetByUniqueID(UniqueID))
                        End If
                    End If
                End If

                Return GetProperty(_profileMemberProperty) 
            End Get
        End Property

#End Region
    
#Region "Synchronous Factory Methods"

        Friend Shared Function NewAccount() As Account 
            Return DataPortal.Create(Of Account)()
        End Function
    
        Friend Shared Function GetByAccountId(ByVal accountId As System.Int32) As Account
            Dim criteria As New AccountCriteria()
            criteria.AccountId = accountId
    
            Return DataPortal.FetchChild(Of Account)(criteria)
        End Function
    
        Friend Shared Function GetByUniqueID(ByVal uniqueID As System.Int32) As Account
            Dim criteria As New AccountCriteria()
            criteria.UniqueID = uniqueID
    
            Return DataPortal.FetchChild(Of Account)(criteria)
        End Function
    
#End Region
    
#Region "ChildPortal partial methods"
    
        Partial Private Sub OnChildCreating(ByRef cancel As Boolean)
        End Sub
        Partial Private Sub OnChildCreated()
        End Sub
        Partial Private Sub OnChildFetching(ByVal criteria As AccountCriteria, ByRef cancel As Boolean)
        End Sub
        Partial Private Sub OnChildFetched()
        End Sub
        Partial Private Sub OnMapping(ByVal reader As SafeDataReader, ByRef cancel As Boolean)
        End Sub
        Partial Private Sub OnMapped()
        End Sub
        Partial Private Sub OnChildInserting(ByVal connection As SqlConnection, ByRef cancel As Boolean)
        End Sub
        Partial Private Sub OnChildInserted()
        End Sub
        Partial Private Sub OnChildUpdating(ByVal connection As SqlConnection, ByRef cancel As Boolean)
        End Sub
        Partial Private Sub OnChildUpdated()
        End Sub
        Partial Private Sub OnChildSelfDeleting(ByVal connection As SqlConnection, ByRef cancel As Boolean)
        End Sub
        Partial Private Sub OnChildSelfDeleted()
        End Sub
        Partial Private Sub OnDeleting(ByVal criteria As AccountCriteria, ByRef cancel As Boolean)
        End Sub
        Partial Private Sub OnDeleting(ByVal criteria As AccountCriteria, ByVal connection As SqlConnection, ByRef cancel As Boolean)
        End Sub
        Partial Private Sub OnDeleted()
        End Sub
        Private Partial Sub OnChildLoading(ByVal childProperty As Csla.Core.IPropertyInfo, ByRef cancel As Boolean)
        End Sub
    
#End Region

#Region "Exists Command"

        Public Shared Function Exists(ByVal criteria As AccountCriteria) As Boolean
            Return PetShop.Business.ExistsCommand.Execute(criteria)
        End Function


#End Region
    End Class
End Namespace
