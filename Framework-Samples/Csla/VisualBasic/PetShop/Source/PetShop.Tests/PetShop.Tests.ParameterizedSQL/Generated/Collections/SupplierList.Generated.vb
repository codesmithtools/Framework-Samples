'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated using CodeSmith: v6.5.0, CSLA Templates: v4.0.0.0, CSLA Framework: v4.3.10.
'     Changes to this file will be lost after each regeneration.
'     To extend the functionality of this class, please modify the partial class 'SupplierList.vb.
'
'     Template: EditableChildList.Generated.cst
'     Template website: http://code.google.com/p/codesmith/
' </autogenerated>
'------------------------------------------------------------------------------
Option Explicit On
Option Strict On

Imports System
Imports System.Collections.Generic
Imports System.Linq

Imports Csla
Imports Csla.Data

Namespace PetShop.Tests.ParameterizedSQL
    <Serializable()> _
    Public Partial Class SupplierList 
        Inherits BusinessListBase(Of SupplierList, Supplier)
    
#Region "Contructor(s)"

        public Sub New()
            AllowNew = true
            MarkAsChild()
        End Sub
    
#End Region

#Region "Synchronous Factory Methods" 

        ''' <summary>
        ''' Creates a new object of type <see cref="SupplierList"/>. 
        ''' </summary>
        ''' <returns>Returns a newly instantiated collection of type <see cref="SupplierList"/>.</returns>
        Friend Shared Function NewList() As SupplierList
            Return DataPortal.CreateChild(Of SupplierList)()
        End Function

        ''' <summary>
        ''' Returns a <see cref="SupplierList"/> object of the specified criteria. 
        ''' </summary>
        ''' <param name="suppId">No additional detail available.</param>
        ''' <returns>A <see cref="SupplierList"/> object of the specified criteria.</returns>
        Friend Shared Function GetBySuppId(ByVal suppId As System.Int32) As SupplierList 
            Dim criteria As New SupplierCriteria()
                        criteria.SuppId = suppId
    
            Return DataPortal.FetchChild(Of SupplierList)(criteria)
        End Function

        Friend Shared Function GetByCriteria(ByVal criteria As SupplierCriteria) As SupplierList
            Return DataPortal.Fetch(Of SupplierList)(criteria)
        End Function

        Friend Shared Function GetAll() As SupplierList
            Return DataPortal.FetchChild(Of SupplierList)(New SupplierCriteria())
        End Function

#End Region
    
#Region "Asynchronous Factory Methods"

        Friend Shared Sub NewListAsync(ByVal handler As EventHandler(Of DataPortalResult(Of SupplierList)))
            Dim dp As New DataPortal(Of SupplierList)()
            AddHandler dp.CreateCompleted, handler
            dp.BeginCreate()
        End Sub
    
        Friend Shared Sub GetBySuppIdAsync(ByVal suppId As System.Int32, ByVal handler As EventHandler(Of DataPortalResult(Of AsyncChildLoader(Of SupplierList))))
            Dim criteria As New SupplierCriteria()
                        criteria.SuppId = suppId

            DataPortal.BeginFetch(Of AsyncChildLoader(Of SupplierList))(criteria, handler)
        End Sub

        Friend Shared Sub GetByCriteriaAsync(ByVal criteria As SupplierCriteria, ByVal handler As EventHandler(Of DataPortalResult(Of SupplierList)))
            Dim dp As New DataPortal(Of SupplierList)()
            AddHandler dp.FetchCompleted, handler

            ' Mark as child?
            dp.BeginFetch(criteria)
        End Sub

        Friend Shared Sub GetAllAsync(ByVal handler As EventHandler(Of DataPortalResult(Of AsyncChildLoader(Of SupplierList))))
            DataPortal.BeginFetch(Of AsyncChildLoader(Of SupplierList))(New SupplierCriteria(), handler)
        End Sub 

#End Region
    
#Region "Method Overrides"
    
        Protected Overrides Function AddNewCore() As Supplier
            Dim item As Supplier = PetShop.Tests.ParameterizedSQL.Supplier.NewSupplier()

            Dim cancel As Boolean = False
            OnAddNewCore(item, cancel)
            If Not (cancel) Then
                ' Check to see if someone set the item to null In the OnAddNewCore.
                If(item Is Nothing) Then
                    item = PetShop.Tests.ParameterizedSQL.Supplier.NewSupplier()
                End If
                Add(item)
            End If

            Return item
        End Function
#End Region

        Protected Sub AddNewCoreAsync(ByVal handler As EventHandler(Of DataPortalResult(Of Supplier)))
            PetShop.Tests.ParameterizedSQL.Supplier.NewSupplierAsync(Sub(o, e)
                    If e.Error Is Nothing Then
                        Add(e.Object)
                        handler.Invoke(Me, New DataPortalResult(Of Supplier)(e.Object, Nothing, Nothing))
                    End If
                End Sub)
        End Sub

#Region "DataPortal partial methods"
    
        ''' <summary>
        ''' CodeSmith generated stub method that is called when creating the child <see cref="Supplier"/> object. 
        ''' </summary>
        ''' <param name="cancel">Value returned from the method indicating whether the object creation should proceed.</param>
        Partial Private Sub OnCreating(ByRef cancel As Boolean)
        End Sub

        ''' <summary>
        ''' CodeSmith generated stub method that is called after the child <see cref="Supplier"/> object has been created. 
        ''' </summary>
        Partial Private Sub OnCreated()
        End Sub

        ''' <summary>
        ''' CodeSmith generated stub method that is called when fetching the child <see cref="Supplier"/> object. 
        ''' </summary>
        ''' <param name="criteria"><see cref="SupplierCriteria"/> object containing the criteria of the object to fetch.</param>
        ''' <param name="cancel">Value returned from the method indicating whether the object fetching should proceed.</param>
        Partial Private Sub OnFetching(ByVal criteria As SupplierCriteria, ByRef cancel As Boolean)
        End Sub

        ''' <summary>
        ''' CodeSmith generated stub method that is called after the child <see cref="Supplier"/> object has been fetched. 
        ''' </summary>
        Partial Private Sub OnFetched()
        End Sub

        ''' <summary>
        ''' CodeSmith generated stub method that is called when mapping the child <see cref="Supplier"/> object. 
        ''' </summary>
        ''' <param name="cancel">Value returned from the method indicating whether the object mapping should proceed.</param>
        Partial Private Sub OnMapping(ByRef cancel As Boolean)
        End Sub

        ''' <summary>
        ''' CodeSmith generated stub method that is called when mapping the child <see cref="Supplier"/> object. 
        ''' </summary>
        ''' <param name="reader"></param>
        ''' <param name="cancel">Value returned from the method indicating whether the object mapping should proceed.</param>
        Partial Private Sub OnMapping(ByVal reader As SafeDataReader, ByRef cancel As Boolean)
        End Sub

        ''' <summary>
        ''' CodeSmith generated stub method that is called after the child <see cref="Supplier"/> object has been mapped. 
        ''' </summary>
        Partial Private Sub OnMapped()
        End Sub

        ''' <summary>
        ''' CodeSmith generated stub method that is called when updating the <see cref="Supplier"/> object. 
        ''' </summary>
        ''' <param name="cancel">Value returned from the method indicating whether the object creation should proceed.</param>
        Partial Private Sub OnUpdating(ByRef cancel As Boolean)
        End Sub

        ''' <summary>
        ''' CodeSmith generated stub method that is called after the <see cref="Supplier"/> object has been updated. 
        ''' </summary>
        Partial Private Sub OnUpdated()
        End Sub
        Partial Private Sub OnAddNewCore(ByRef item As Supplier, ByRef cancel As Boolean)
        End Sub
    
#End Region
#Region "Exists Command"

        ''' <summary>
        ''' Determines if a record exists in the Supplier in the database for the specified criteria. 
        ''' </summary>
        ''' <param name="criteria">The criteria parameter is a <see cref="SupplierList"/> object.</param>
        ''' <returns>A boolean value of true is returned if a record is found.</returns>
        Public Shared Function Exists(ByVal criteria As SupplierCriteria) As Boolean
            Return PetShop.Tests.ParameterizedSQL.Supplier.Exists(criteria)
        End Function

        ''' <summary>
        ''' Determines if a record exists in the Supplier in the database for the specified criteria. 
        ''' </summary>
        Public Shared Sub ExistsAsync(ByVal criteria As SupplierCriteria, ByVal handler As EventHandler(Of DataPortalResult(Of ExistsCommand)))
            PetShop.Tests.ParameterizedSQL.Supplier.ExistsAsync(criteria, handler)
        End Sub

#End Region
 
#region "Enhancements"

        Public Function GetSupplier(ByVal suppId As System.Int32) As Supplier
            Return Me.FirstOrDefault(Function(i As Supplier) i.SuppId = suppId)
        End Function
        
        Public Overloads Function Contains(ByVal suppId As System.Int32) As Boolean
            Return Me.Where(Function(i As Supplier) i.SuppId = suppId).Count() > 0
        End Function

        Public Overloads Function ContainsDeleted(ByVal suppId As System.Int32) As Boolean
            Return DeletedList.Where(Function(i As Supplier) i.SuppId = suppId).Count() > 0
        End Function

        Public Overloads Sub Remove(ByVal suppId As System.Int32)
            Dim item As Supplier = Me.FirstOrDefault(Function(i As Supplier) i.SuppId = suppId)
            If item IsNot Nothing Then
                Remove(item)
            End If
        End Sub
        
#End Region
    End Class
End Namespace