#pragma warning disable 1591
#pragma warning disable 0414        
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Linq;

namespace Tracker.Core.Data
{
    /// <summary>
    /// The class representing the dbo.User table.
    /// </summary>
    [System.Data.Linq.Mapping.Table(Name="dbo.User")]
    [System.Runtime.Serialization.DataContract(IsReference = true)]
    [System.ComponentModel.DataAnnotations.ScaffoldTable(true)]
    [System.ComponentModel.DataAnnotations.MetadataType(typeof(Tracker.Core.Data.User.Metadata))]
    [System.Data.Services.Common.DataServiceKey("Id")]
    [System.Diagnostics.DebuggerDisplay("Id: {Id}")]
    public partial class User
        : LinqEntityBase, ICloneable, Tracker.Core.Data.Interfaces.IUser  
    {
        #region Static Constructor
        /// <summary>
        /// Initializes the <see cref="User"/> class.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        static User()
        {
            AddSharedRules();
        }
        #endregion

        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="User"/> class.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public User()
        {
            Initialize();
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void Initialize()
        {
            _auditList = new System.Data.Linq.EntitySet<Audit>(OnAuditListAdd, OnAuditListRemove);
            _assignedTaskList = new System.Data.Linq.EntitySet<Task>(OnAssignedTaskListAdd, OnAssignedTaskListRemove);
            _createdTaskList = new System.Data.Linq.EntitySet<Task>(OnCreatedTaskListAdd, OnCreatedTaskListRemove);
            _userRoleList = new System.Data.Linq.EntitySet<UserRole>(OnUserRoleListAdd, OnUserRoleListRemove);
            _avatar = default(System.Data.Linq.Link<System.Data.Linq.Binary>);
            OnCreated();
        }
        #endregion

        #region Column Mapped Properties

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private int _id = default(int);

        /// <summary>
        /// Gets the Id column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "Id", Storage = "_id", DbType = "int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true, CanBeNull = false, UpdateCheck = System.Data.Linq.Mapping.UpdateCheck.Never)]
        [System.Runtime.Serialization.DataMember(Order = 1)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public int Id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    OnIdChanging(value);
                    SendPropertyChanging("Id");
                    _id = value;
                    SendPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _emailAddress;

        /// <summary>
        /// Gets or sets the EmailAddress column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "EmailAddress", Storage = "_emailAddress", DbType = "nvarchar(250) NOT NULL", CanBeNull = false, UpdateCheck = System.Data.Linq.Mapping.UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.StringLength(250)]
        [System.Runtime.Serialization.DataMember(Order = 2)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string EmailAddress
        {
            get { return _emailAddress; }
            set
            {
                if (_emailAddress != value)
                {
                    OnEmailAddressChanging(value);
                    SendPropertyChanging("EmailAddress");
                    _emailAddress = value;
                    SendPropertyChanged("EmailAddress");
                    OnEmailAddressChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _firstName;

        /// <summary>
        /// Gets or sets the FirstName column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "FirstName", Storage = "_firstName", DbType = "nvarchar(200)", UpdateCheck = System.Data.Linq.Mapping.UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.StringLength(200)]
        [System.Runtime.Serialization.DataMember(Order = 3)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string FirstName
        {
            get { return _firstName; }
            set
            {
                if (_firstName != value)
                {
                    OnFirstNameChanging(value);
                    SendPropertyChanging("FirstName");
                    _firstName = value;
                    SendPropertyChanged("FirstName");
                    OnFirstNameChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _lastName;

        /// <summary>
        /// Gets or sets the LastName column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "LastName", Storage = "_lastName", DbType = "nvarchar(200)", UpdateCheck = System.Data.Linq.Mapping.UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.StringLength(200)]
        [System.Runtime.Serialization.DataMember(Order = 4)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string LastName
        {
            get { return _lastName; }
            set
            {
                if (_lastName != value)
                {
                    OnLastNameChanging(value);
                    SendPropertyChanging("LastName");
                    _lastName = value;
                    SendPropertyChanged("LastName");
                    OnLastNameChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.Link<System.Data.Linq.Binary> _avatar;

        /// <summary>
        /// Gets or sets the Avatar column value.
        /// </summary>
        [System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]
        [System.Data.Linq.Mapping.Column(Name = "Avatar", Storage = "_avatar", DbType = "varbinary(MAX)", UpdateCheck = System.Data.Linq.Mapping.UpdateCheck.Never)]
        [System.Runtime.Serialization.DataMember(Order = 5)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Data.Linq.Binary Avatar
        {
            get { return _avatar.Value; }
            set
            {
                if (_avatar.Value != value)
                {
                    OnAvatarChanging(value);
                    SendPropertyChanging("Avatar");
                    _avatar.Value = value;
                    SendPropertyChanged("Avatar");
                    OnAvatarChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.DateTime _createdDate;

        /// <summary>
        /// Gets or sets the CreatedDate column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "CreatedDate", Storage = "_createdDate", DbType = "datetime NOT NULL", CanBeNull = false, UpdateCheck = System.Data.Linq.Mapping.UpdateCheck.Never)]
        [System.Runtime.Serialization.DataMember(Order = 6)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.DateTime CreatedDate
        {
            get { return _createdDate; }
            set
            {
                if (_createdDate != value)
                {
                    OnCreatedDateChanging(value);
                    SendPropertyChanging("CreatedDate");
                    _createdDate = value;
                    SendPropertyChanged("CreatedDate");
                    OnCreatedDateChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.DateTime _modifiedDate;

        /// <summary>
        /// Gets or sets the ModifiedDate column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "ModifiedDate", Storage = "_modifiedDate", DbType = "datetime NOT NULL", CanBeNull = false, UpdateCheck = System.Data.Linq.Mapping.UpdateCheck.Never)]
        [System.Runtime.Serialization.DataMember(Order = 7)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.DateTime ModifiedDate
        {
            get { return _modifiedDate; }
            set
            {
                if (_modifiedDate != value)
                {
                    OnModifiedDateChanging(value);
                    SendPropertyChanging("ModifiedDate");
                    _modifiedDate = value;
                    SendPropertyChanged("ModifiedDate");
                    OnModifiedDateChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.Binary _rowVersion = default(System.Data.Linq.Binary);

        /// <summary>
        /// Gets the RowVersion column value.
        /// </summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Data.Linq.Mapping.Column(Name = "RowVersion", Storage = "_rowVersion", DbType = "timestamp NOT NULL", IsDbGenerated = true, IsVersion = true, CanBeNull = false, UpdateCheck = System.Data.Linq.Mapping.UpdateCheck.Never)]
        [System.Runtime.Serialization.DataMember(Order = 8)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Data.Linq.Binary RowVersion
        {
            get { return _rowVersion; }
            set
            {
                if (_rowVersion != value)
                {
                    OnRowVersionChanging(value);
                    SendPropertyChanging("RowVersion");
                    _rowVersion = value;
                    SendPropertyChanged("RowVersion");
                    OnRowVersionChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _passwordHash;

        /// <summary>
        /// Gets or sets the PasswordHash column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "PasswordHash", Storage = "_passwordHash", DbType = "char(86) NOT NULL", CanBeNull = false, UpdateCheck = System.Data.Linq.Mapping.UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.StringLength(86)]
        [System.Runtime.Serialization.DataMember(Order = 9)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string PasswordHash
        {
            get { return _passwordHash; }
            set
            {
                if (_passwordHash != value)
                {
                    OnPasswordHashChanging(value);
                    SendPropertyChanging("PasswordHash");
                    _passwordHash = value;
                    SendPropertyChanged("PasswordHash");
                    OnPasswordHashChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _passwordSalt;

        /// <summary>
        /// Gets or sets the PasswordSalt column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "PasswordSalt", Storage = "_passwordSalt", DbType = "char(5) NOT NULL", CanBeNull = false, UpdateCheck = System.Data.Linq.Mapping.UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        [System.Runtime.Serialization.DataMember(Order = 10)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string PasswordSalt
        {
            get { return _passwordSalt; }
            set
            {
                if (_passwordSalt != value)
                {
                    OnPasswordSaltChanging(value);
                    SendPropertyChanging("PasswordSalt");
                    _passwordSalt = value;
                    SendPropertyChanged("PasswordSalt");
                    OnPasswordSaltChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _comment;

        /// <summary>
        /// Gets or sets the Comment column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "Comment", Storage = "_comment", DbType = "text", UpdateCheck = System.Data.Linq.Mapping.UpdateCheck.Never)]
        [System.Runtime.Serialization.DataMember(Order = 11)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string Comment
        {
            get { return _comment; }
            set
            {
                if (_comment != value)
                {
                    OnCommentChanging(value);
                    SendPropertyChanging("Comment");
                    _comment = value;
                    SendPropertyChanged("Comment");
                    OnCommentChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private bool _isApproved;

        /// <summary>
        /// Gets or sets the IsApproved column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "IsApproved", Storage = "_isApproved", DbType = "bit NOT NULL", CanBeNull = false, UpdateCheck = System.Data.Linq.Mapping.UpdateCheck.Never)]
        [System.Runtime.Serialization.DataMember(Order = 12)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public bool IsApproved
        {
            get { return _isApproved; }
            set
            {
                if (_isApproved != value)
                {
                    OnIsApprovedChanging(value);
                    SendPropertyChanging("IsApproved");
                    _isApproved = value;
                    SendPropertyChanged("IsApproved");
                    OnIsApprovedChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private Nullable<System.DateTime> _lastLoginDate;

        /// <summary>
        /// Gets or sets the LastLoginDate column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "LastLoginDate", Storage = "_lastLoginDate", DbType = "datetime", UpdateCheck = System.Data.Linq.Mapping.UpdateCheck.Never)]
        [System.Runtime.Serialization.DataMember(Order = 13)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public Nullable<System.DateTime> LastLoginDate
        {
            get { return _lastLoginDate; }
            set
            {
                if (_lastLoginDate != value)
                {
                    OnLastLoginDateChanging(value);
                    SendPropertyChanging("LastLoginDate");
                    _lastLoginDate = value;
                    SendPropertyChanged("LastLoginDate");
                    OnLastLoginDateChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.DateTime _lastActivityDate;

        /// <summary>
        /// Gets or sets the LastActivityDate column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "LastActivityDate", Storage = "_lastActivityDate", DbType = "datetime NOT NULL", CanBeNull = false, UpdateCheck = System.Data.Linq.Mapping.UpdateCheck.Never)]
        [System.Runtime.Serialization.DataMember(Order = 14)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.DateTime LastActivityDate
        {
            get { return _lastActivityDate; }
            set
            {
                if (_lastActivityDate != value)
                {
                    OnLastActivityDateChanging(value);
                    SendPropertyChanging("LastActivityDate");
                    _lastActivityDate = value;
                    SendPropertyChanged("LastActivityDate");
                    OnLastActivityDateChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private Nullable<System.DateTime> _lastPasswordChangeDate;

        /// <summary>
        /// Gets or sets the LastPasswordChangeDate column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "LastPasswordChangeDate", Storage = "_lastPasswordChangeDate", DbType = "datetime", UpdateCheck = System.Data.Linq.Mapping.UpdateCheck.Never)]
        [System.Runtime.Serialization.DataMember(Order = 15)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public Nullable<System.DateTime> LastPasswordChangeDate
        {
            get { return _lastPasswordChangeDate; }
            set
            {
                if (_lastPasswordChangeDate != value)
                {
                    OnLastPasswordChangeDateChanging(value);
                    SendPropertyChanging("LastPasswordChangeDate");
                    _lastPasswordChangeDate = value;
                    SendPropertyChanged("LastPasswordChangeDate");
                    OnLastPasswordChangeDateChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _avatarType;

        /// <summary>
        /// Gets or sets the AvatarType column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "AvatarType", Storage = "_avatarType", DbType = "nvarchar(150)", UpdateCheck = System.Data.Linq.Mapping.UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.StringLength(150)]
        [System.Runtime.Serialization.DataMember(Order = 16)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string AvatarType
        {
            get { return _avatarType; }
            set
            {
                if (_avatarType != value)
                {
                    OnAvatarTypeChanging(value);
                    SendPropertyChanging("AvatarType");
                    _avatarType = value;
                    SendPropertyChanged("AvatarType");
                    OnAvatarTypeChanged();
                }
            }
        }
        #endregion

        #region Association Mapped Properties

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntitySet<Audit> _auditList;

        /// <summary>
        /// Gets or sets the <see cref="Audit"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "User_Audit", Storage = "_auditList", ThisKey = "Id", OtherKey = "UserId")]
        [System.Runtime.Serialization.DataMember(Order=17, EmitDefaultValue=false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Data.Linq.EntitySet<Audit> AuditList
        {
            get { return (serializing && !_auditList.HasLoadedOrAssignedValues) ? null : _auditList; }
            set { _auditList.Assign(value); }
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnAuditListAdd(Audit entity)
        {
            SendPropertyChanging(null);
            entity.User = this;
            SendPropertyChanged(null);
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnAuditListRemove(Audit entity)
        {
            SendPropertyChanging(null);
            entity.User = null;
            SendPropertyChanged(null);
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntitySet<Task> _assignedTaskList;

        /// <summary>
        /// Gets or sets the <see cref="Task"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "User_Task", Storage = "_assignedTaskList", ThisKey = "Id", OtherKey = "AssignedId")]
        [System.Runtime.Serialization.DataMember(Order=18, EmitDefaultValue=false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Data.Linq.EntitySet<Task> AssignedTaskList
        {
            get { return (serializing && !_assignedTaskList.HasLoadedOrAssignedValues) ? null : _assignedTaskList; }
            set { _assignedTaskList.Assign(value); }
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnAssignedTaskListAdd(Task entity)
        {
            SendPropertyChanging(null);
            entity.AssignedUser = this;
            SendPropertyChanged(null);
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnAssignedTaskListRemove(Task entity)
        {
            SendPropertyChanging(null);
            entity.AssignedUser = null;
            SendPropertyChanged(null);
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntitySet<Task> _createdTaskList;

        /// <summary>
        /// Gets or sets the <see cref="Task"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "User_Task1", Storage = "_createdTaskList", ThisKey = "Id", OtherKey = "CreatedId")]
        [System.Runtime.Serialization.DataMember(Order=19, EmitDefaultValue=false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Data.Linq.EntitySet<Task> CreatedTaskList
        {
            get { return (serializing && !_createdTaskList.HasLoadedOrAssignedValues) ? null : _createdTaskList; }
            set { _createdTaskList.Assign(value); }
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnCreatedTaskListAdd(Task entity)
        {
            SendPropertyChanging(null);
            entity.CreatedUser = this;
            SendPropertyChanged(null);
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnCreatedTaskListRemove(Task entity)
        {
            SendPropertyChanging(null);
            entity.CreatedUser = null;
            SendPropertyChanged(null);
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntitySet<UserRole> _userRoleList;

        /// <summary>
        /// Gets or sets the <see cref="UserRole"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "User_UserRole", Storage = "_userRoleList", ThisKey = "Id", OtherKey = "UserId")]
        [System.Runtime.Serialization.DataMember(Order=20, EmitDefaultValue=false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Data.Linq.EntitySet<UserRole> UserRoleList
        {
            get { return (serializing && !_userRoleList.HasLoadedOrAssignedValues) ? null : _userRoleList; }
            set { _userRoleList.Assign(value); }
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnUserRoleListAdd(UserRole entity)
        {
            SendPropertyChanging(null);
            entity.User = this;
            SendPropertyChanged(null);
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnUserRoleListRemove(UserRole entity)
        {
            SendPropertyChanging(null);
            entity.User = null;
            SendPropertyChanged(null);
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntitySet<Role> _roleList;

        /// <summary>
        /// Gets or sets the Many To Many RoleList list.
        /// </summary>
        /// <value>The RoleList list.</value>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Data.Linq.EntitySet<Role> RoleList
        {
            get
            {
                if (serializing)
                    return null;

                if (_roleList == null)
                {
                    _roleList = new System.Data.Linq.EntitySet<Role>(OnRoleListAdd, OnRoleListRemove);
                    _roleList.SetSource(UserRoleList.Select(c => c.Role));
                }
                return _roleList;
            }
            set
            {
                _roleList.Assign(value);
            }
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnRoleListAdd(Role entity)
        {
            SendPropertyChanging(null);
            UserRoleList.Add(new UserRole { User = this, Role = entity });
            SendPropertyChanged(null);
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnRoleListRemove(Role entity)
        {
            SendPropertyChanging(null);
            var userRole = UserRoleList.FirstOrDefault(c => c.UserId == Id
                && c.RoleId == entity.Id);
            UserRoleList.Remove( userRole);
            SendPropertyChanged(null);
        }

        #endregion

        #region Extensibility Method Definitions
        /// <summary>Called by the static constructor to add shared rules.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        static partial void AddSharedRules();
        /// <summary>Called when this instance is loaded.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnCreated();
        /// <summary>Called when <see cref="Id"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnIdChanging(int value);
        /// <summary>Called after <see cref="Id"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnIdChanged();
        /// <summary>Called when <see cref="EmailAddress"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnEmailAddressChanging(string value);
        /// <summary>Called after <see cref="EmailAddress"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnEmailAddressChanged();
        /// <summary>Called when <see cref="FirstName"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnFirstNameChanging(string value);
        /// <summary>Called after <see cref="FirstName"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnFirstNameChanged();
        /// <summary>Called when <see cref="LastName"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLastNameChanging(string value);
        /// <summary>Called after <see cref="LastName"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLastNameChanged();
        /// <summary>Called when <see cref="Avatar"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnAvatarChanging(System.Data.Linq.Binary value);
        /// <summary>Called after <see cref="Avatar"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnAvatarChanged();
        /// <summary>Called when <see cref="CreatedDate"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnCreatedDateChanging(System.DateTime value);
        /// <summary>Called after <see cref="CreatedDate"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnCreatedDateChanged();
        /// <summary>Called when <see cref="ModifiedDate"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnModifiedDateChanging(System.DateTime value);
        /// <summary>Called after <see cref="ModifiedDate"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnModifiedDateChanged();
        /// <summary>Called when <see cref="RowVersion"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnRowVersionChanging(System.Data.Linq.Binary value);
        /// <summary>Called after <see cref="RowVersion"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnRowVersionChanged();
        /// <summary>Called when <see cref="PasswordHash"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnPasswordHashChanging(string value);
        /// <summary>Called after <see cref="PasswordHash"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnPasswordHashChanged();
        /// <summary>Called when <see cref="PasswordSalt"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnPasswordSaltChanging(string value);
        /// <summary>Called after <see cref="PasswordSalt"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnPasswordSaltChanged();
        /// <summary>Called when <see cref="Comment"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnCommentChanging(string value);
        /// <summary>Called after <see cref="Comment"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnCommentChanged();
        /// <summary>Called when <see cref="IsApproved"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnIsApprovedChanging(bool value);
        /// <summary>Called after <see cref="IsApproved"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnIsApprovedChanged();
        /// <summary>Called when <see cref="LastLoginDate"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLastLoginDateChanging(Nullable<System.DateTime> value);
        /// <summary>Called after <see cref="LastLoginDate"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLastLoginDateChanged();
        /// <summary>Called when <see cref="LastActivityDate"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLastActivityDateChanging(System.DateTime value);
        /// <summary>Called after <see cref="LastActivityDate"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLastActivityDateChanged();
        /// <summary>Called when <see cref="LastPasswordChangeDate"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLastPasswordChangeDateChanging(Nullable<System.DateTime> value);
        /// <summary>Called after <see cref="LastPasswordChangeDate"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLastPasswordChangeDateChanged();
        /// <summary>Called when <see cref="AvatarType"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnAvatarTypeChanging(string value);
        /// <summary>Called after <see cref="AvatarType"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnAvatarTypeChanged();

        #endregion

        #region Serialization
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private bool serializing;

        /// <summary>
        /// Called when serializing.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnSerializing]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public void OnSerializing(System.Runtime.Serialization.StreamingContext context) {
            serializing = true;
        }

        /// <summary>
        /// Called when serialized.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnSerialized]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public void OnSerialized(System.Runtime.Serialization.StreamingContext context) {
            serializing = false;
        }

        /// <summary>
        /// Called when deserializing.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnDeserializing]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public void OnDeserializing(System.Runtime.Serialization.StreamingContext context) {
            Initialize();
        }

        /// <summary>
        /// Deserializes an instance of <see cref="User"/> from XML.
        /// </summary>
        /// <param name="xml">The XML string representing a <see cref="User"/> instance.</param>
        /// <returns>An instance of <see cref="User"/> that is deserialized from the XML string.</returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public static User FromXml(string xml)
        {
            var deserializer = new System.Runtime.Serialization.DataContractSerializer(typeof(User));

            using (var sr = new System.IO.StringReader(xml))
            using (var reader = System.Xml.XmlReader.Create(sr))
            {
                return deserializer.ReadObject(reader) as User;
            }
        }

        /// <summary>
        /// Deserializes an instance of <see cref="User"/> from a byte array.
        /// </summary>
        /// <param name="buffer">The byte array representing a <see cref="User"/> instance.</param>
        /// <returns>An instance of <see cref="User"/> that is deserialized from the byte array.</returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public static User FromBinary(byte[] buffer)
        {
            var deserializer = new System.Runtime.Serialization.DataContractSerializer(typeof(User));

            using (var ms = new System.IO.MemoryStream(buffer))
            using (var reader = System.Xml.XmlDictionaryReader.CreateBinaryReader(ms, System.Xml.XmlDictionaryReaderQuotas.Max))
            {
                return deserializer.ReadObject(reader) as User;
            }
        }
        
        #endregion

        #region Clone
        /// <summary>
        /// Creates a new object that is a copy of the current instance.
        /// </summary>
        /// <returns>
        /// A new object that is a copy of this instance.
        /// </returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        object ICloneable.Clone()
        {
            var serializer = new System.Runtime.Serialization.DataContractSerializer(GetType());
            using (var ms = new System.IO.MemoryStream())
            {
                serializer.WriteObject(ms, this);
                ms.Position = 0;
                return serializer.ReadObject(ms);
            }
        }

        /// <summary>
        /// Creates a new object that is a copy of the current instance.
        /// </summary>
        /// <returns>
        /// A new object that is a copy of this instance.
        /// </returns>
        /// <remarks>
        /// Only loaded <see cref="T:System.Data.Linq.EntityRef`1"/> and <see cref="T:System.Data.Linq.EntitySet`1" /> child accessions will be cloned.
        /// </remarks>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public User Clone()
        {
            return (User)((ICloneable)this).Clone();
        }
        #endregion

        #region Detach Methods
        /// <summary>
        /// Detach this instance from the <see cref="System.Data.Linq.DataContext"/>.
        /// </summary>
        /// <remarks>
        /// Detaching the entity will stop all lazy loading and allow it to be added to another <see cref="System.Data.Linq.DataContext"/>.
        /// </remarks>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public override void Detach()
        {
            if (!IsAttached())
                return;

            base.Detach();
            _auditList = Detach(_auditList, OnAuditListAdd, OnAuditListRemove);
            _assignedTaskList = Detach(_assignedTaskList, OnAssignedTaskListAdd, OnAssignedTaskListRemove);
            _createdTaskList = Detach(_createdTaskList, OnCreatedTaskListAdd, OnCreatedTaskListRemove);
            _userRoleList = Detach(_userRoleList, OnUserRoleListAdd, OnUserRoleListRemove);
            _avatar = Detach(_avatar);
        }
        #endregion
    }
}
#pragma warning restore 1591
#pragma warning restore 0414

