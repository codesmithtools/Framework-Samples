'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a CodeSmith Template.
'
'     DO Not MODIfY contents of this file. Changes to this
'     file will be lost if the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------
Imports System
Imports System.Linq

Namespace PetShop.Core.Data
    ''' <summary>
    ''' The class representing the dbo.Product table.
    ''' </summary>
    <System.Data.Linq.Mapping.Table(Name:="dbo.Product")> _
    <System.Runtime.Serialization.DataContract(IsReference:=True)> _
    <System.ComponentModel.DataAnnotations.ScaffoldTable(True)> _
    <System.ComponentModel.DataAnnotations.MetadataType(GetType(Product.Metadata))> _
    <System.Data.Services.Common.DataServiceKey("ProductId")> _
    <System.Diagnostics.DebuggerDisplay("ProductId: {ProductId}")> _
    Partial Public Class Product
        Inherits LinqEntityBase
        Implements ICloneable

#Region "Static Constructor"
        ''' <summary>
        ''' Initializes the <see cref="Product"/> class.
        ''' </summary>
        Shared Sub New()
            AddSharedRules()
        End Sub
#End Region

#Region "Default Constructor"
        ''' <summary>
        ''' Initializes a new instance of the <see cref="Product"/> class.
        ''' </summary>
        <System.Diagnostics.DebuggerNonUserCode()> _
        Public Sub New()
            Initialize()
        End Sub

        Private Sub Initialize()
            OnCreated()
        End Sub
#End Region

#Region "Column Mapped Properties"

        Private _productId As String

        ''' <summary>
        ''' Gets or sets the ProductId column value.
        ''' </summary>
        <System.Data.Linq.Mapping.Column(Name:="ProductId", Storage:="_productId", DbType:="varchar(10) NOT NULL", IsPrimaryKey:=True, CanBeNull:=False)> _
        <ComponentModel.DataAnnotations.StringLength(10)> _
        <System.Runtime.Serialization.DataMember(Order:=1)> _
        Public Property ProductId() As String
            Get
                Return _productId
            End Get
            Set(ByVal value As String)
                If (String.Equals(Me._productId, value) = False) Then
                    OnProductIdChanging(value)
                    SendPropertyChanging("ProductId")
                    _productId = value
                    SendPropertyChanged("ProductId")
                    OnProductIdChanged()
                End If
            End Set
        End Property

        Private _categoryId As String

        ''' <summary>
        ''' Gets or sets the CategoryId column value.
        ''' </summary>
        <System.Data.Linq.Mapping.Column(Name:="CategoryId", Storage:="_categoryId", DbType:="varchar(10) NOT NULL", CanBeNull:=False)> _
        <ComponentModel.DataAnnotations.StringLength(10)> _
        <System.Runtime.Serialization.DataMember(Order:=2)> _
        Public Property CategoryId() As String
            Get
                Return _categoryId
            End Get
            Set(ByVal value As String)
                If (String.Equals(Me._categoryId, value) = False) Then
                    OnCategoryIdChanging(value)
                    SendPropertyChanging("CategoryId")
                    _categoryId = value
                    SendPropertyChanged("CategoryId")
                    OnCategoryIdChanged()
                End If
            End Set
        End Property

        Private _name As String

        ''' <summary>
        ''' Gets or sets the Name column value.
        ''' </summary>
        <System.Data.Linq.Mapping.Column(Name:="Name", Storage:="_name", DbType:="varchar(80)")> _
        <ComponentModel.DataAnnotations.StringLength(80)> _
        <System.Runtime.Serialization.DataMember(Order:=3)> _
        Public Property Name() As String
            Get
                Return _name
            End Get
            Set(ByVal value As String)
                If (String.Equals(Me._name, value) = False) Then
                    OnNameChanging(value)
                    SendPropertyChanging("Name")
                    _name = value
                    SendPropertyChanged("Name")
                    OnNameChanged()
                End If
            End Set
        End Property

        Private _descn As String

        ''' <summary>
        ''' Gets or sets the Descn column value.
        ''' </summary>
        <System.Data.Linq.Mapping.Column(Name:="Descn", Storage:="_descn", DbType:="varchar(255)")> _
        <ComponentModel.DataAnnotations.StringLength(255)> _
        <System.Runtime.Serialization.DataMember(Order:=4)> _
        Public Property Descn() As String
            Get
                Return _descn
            End Get
            Set(ByVal value As String)
                If (String.Equals(Me._descn, value) = False) Then
                    OnDescnChanging(value)
                    SendPropertyChanging("Descn")
                    _descn = value
                    SendPropertyChanged("Descn")
                    OnDescnChanged()
                End If
            End Set
        End Property

        Private _image As String

        ''' <summary>
        ''' Gets or sets the Image column value.
        ''' </summary>
        <System.Data.Linq.Mapping.Column(Name:="Image", Storage:="_image", DbType:="varchar(80)")> _
        <ComponentModel.DataAnnotations.StringLength(80)> _
        <System.Runtime.Serialization.DataMember(Order:=5)> _
        Public Property Image() As String
            Get
                Return _image
            End Get
            Set(ByVal value As String)
                If (String.Equals(Me._image, value) = False) Then
                    OnImageChanging(value)
                    SendPropertyChanging("Image")
                    _image = value
                    SendPropertyChanged("Image")
                    OnImageChanged()
                End If
            End Set
        End Property

        Private _createDate As Date

        ''' <summary>
        ''' Gets or sets the CreateDate column value.
        ''' </summary>
        <System.Data.Linq.Mapping.Column(Name:="CreateDate", Storage:="_createDate", DbType:="datetime NOT NULL", CanBeNull:=False)> _
        <System.Runtime.Serialization.DataMember(Order:=6)> _
        Public Property CreateDate() As Date
            Get
                Return _createDate
            End Get
            Set(ByVal value As Date)
                If ((Me._createDate = value) = False) Then
                    OnCreateDateChanging(value)
                    SendPropertyChanging("CreateDate")
                    _createDate = value
                    SendPropertyChanged("CreateDate")
                    OnCreateDateChanged()
                End If
            End Set
        End Property

        Private _password As String

        ''' <summary>
        ''' Gets or sets the Password column value.
        ''' </summary>
        <System.Data.Linq.Mapping.Column(Name:="Password", Storage:="_password", DbType:="varchar(80) NOT NULL", CanBeNull:=False)> _
        <ComponentModel.DataAnnotations.StringLength(80)> _
        <System.Runtime.Serialization.DataMember(Order:=7)> _
        Public Property Password() As String
            Get
                Return _password
            End Get
            Set(ByVal value As String)
                If (String.Equals(Me._password, value) = False) Then
                    OnPasswordChanging(value)
                    SendPropertyChanging("Password")
                    _password = value
                    SendPropertyChanged("Password")
                    OnPasswordChanged()
                End If
            End Set
        End Property

        Private _fullDescn As String

        ''' <summary>
        ''' Gets or sets the FullDescn column value.
        ''' </summary>
        <System.Data.Linq.Mapping.Column(Name:="FullDescn", Storage:="_fullDescn", DbType:="varchar(512)")> _
        <ComponentModel.DataAnnotations.StringLength(512)> _
        <System.Runtime.Serialization.DataMember(Order:=8)> _
        Public Property FullDescn() As String
            Get
                Return _fullDescn
            End Get
            Set(ByVal value As String)
                If (String.Equals(Me._fullDescn, value) = False) Then
                    OnFullDescnChanging(value)
                    SendPropertyChanging("FullDescn")
                    _fullDescn = value
                    SendPropertyChanged("FullDescn")
                    OnFullDescnChanged()
                End If
            End Set
        End Property

        Private _newbie As Nullable(Of Boolean)

        ''' <summary>
        ''' Gets or sets the Newbie column value.
        ''' </summary>
        <System.Data.Linq.Mapping.Column(Name:="Newbie", Storage:="_newbie", DbType:="bit")> _
        <System.Runtime.Serialization.DataMember(Order:=9)> _
        Public Property Newbie() As Nullable(Of Boolean)
            Get
                Return _newbie
            End Get
            Set(ByVal value As Nullable(Of Boolean))
                If (Me._newbie.Equals(value) = False) Then
                    OnNewbieChanging(value)
                    SendPropertyChanging("Newbie")
                    _newbie = value
                    SendPropertyChanged("Newbie")
                    OnNewbieChanged()
                End If
            End Set
        End Property
#End Region

#Region "Association Mapped Properties"

#End Region

#Region "Extensibility Method Definitions"

        ''' <summary>Called by the Shared constructor to add shared rules.</summary>
        Partial Private Shared Sub AddSharedRules()
        End Sub
        ''' <summary>Called when this instance is loaded.</summary>
        Partial Private Sub OnLoaded()
        End Sub
        ''' <summary>Called when this instance is being saved.</summary>
        Partial Private Sub OnValidate(ByVal action As System.Data.Linq.ChangeAction)
        End Sub
        ''' <summary>Called when this instance is created.</summary>
        Partial Private Sub OnCreated()
        End Sub
        ''' <summary>Called when ProductId is changing.</summary>
        ''' <param name="value">The new value.</param>
        Partial Private Sub OnProductIdChanging(ByVal value As String)
        End Sub
        ''' <summary>Called after ProductId has Changed.</summary>
        Partial Private Sub OnProductIdChanged()
        End Sub
        ''' <summary>Called when CategoryId is changing.</summary>
        ''' <param name="value">The new value.</param>
        Partial Private Sub OnCategoryIdChanging(ByVal value As String)
        End Sub
        ''' <summary>Called after CategoryId has Changed.</summary>
        Partial Private Sub OnCategoryIdChanged()
        End Sub
        ''' <summary>Called when Name is changing.</summary>
        ''' <param name="value">The new value.</param>
        Partial Private Sub OnNameChanging(ByVal value As String)
        End Sub
        ''' <summary>Called after Name has Changed.</summary>
        Partial Private Sub OnNameChanged()
        End Sub
        ''' <summary>Called when Descn is changing.</summary>
        ''' <param name="value">The new value.</param>
        Partial Private Sub OnDescnChanging(ByVal value As String)
        End Sub
        ''' <summary>Called after Descn has Changed.</summary>
        Partial Private Sub OnDescnChanged()
        End Sub
        ''' <summary>Called when Image is changing.</summary>
        ''' <param name="value">The new value.</param>
        Partial Private Sub OnImageChanging(ByVal value As String)
        End Sub
        ''' <summary>Called after Image has Changed.</summary>
        Partial Private Sub OnImageChanged()
        End Sub
        ''' <summary>Called when CreateDate is changing.</summary>
        ''' <param name="value">The new value.</param>
        Partial Private Sub OnCreateDateChanging(ByVal value As Date)
        End Sub
        ''' <summary>Called after CreateDate has Changed.</summary>
        Partial Private Sub OnCreateDateChanged()
        End Sub
        ''' <summary>Called when Password is changing.</summary>
        ''' <param name="value">The new value.</param>
        Partial Private Sub OnPasswordChanging(ByVal value As String)
        End Sub
        ''' <summary>Called after Password has Changed.</summary>
        Partial Private Sub OnPasswordChanged()
        End Sub
        ''' <summary>Called when FullDescn is changing.</summary>
        ''' <param name="value">The new value.</param>
        Partial Private Sub OnFullDescnChanging(ByVal value As String)
        End Sub
        ''' <summary>Called after FullDescn has Changed.</summary>
        Partial Private Sub OnFullDescnChanged()
        End Sub
        ''' <summary>Called when Newbie is changing.</summary>
        ''' <param name="value">The new value.</param>
        Partial Private Sub OnNewbieChanging(ByVal value As Nullable(Of Boolean))
        End Sub
        ''' <summary>Called after Newbie has Changed.</summary>
        Partial Private Sub OnNewbieChanged()
        End Sub
#End Region

#Region "Serialization"

        Private serializing As Boolean

        ''' <summary>
        ''' Called when serializing.
        ''' </summary>
        ''' <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        <System.Runtime.Serialization.OnSerializing(), _
         System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)> _
        Public Sub OnSerializing(ByVal context As System.Runtime.Serialization.StreamingContext)
            serializing = True
        End Sub

        ''' <summary>
        ''' Called when serializing.
        ''' </summary>
        ''' <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        <System.Runtime.Serialization.OnSerialized(), _
         System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)> _
        Public Sub OnSerialized(ByVal context As System.Runtime.Serialization.StreamingContext)
            serializing = False
        End Sub

        ''' <summary>
        ''' Called when deserializing.
        ''' </summary>
        ''' <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        <System.Runtime.Serialization.OnDeserializing(), _
         System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)> _
        Public Sub OnDeserializing(ByVal context As System.Runtime.Serialization.StreamingContext)
            Initialize()
        End Sub
        
        ''' <summary>
        ''' Deserializes an instance of <see cref="Product"/> from XML.
        ''' </summary>
        ''' <param name="xml">The XML string representing a <see cref="Product"/> instance.</param>
        ''' <returns>An instance of <see cref="Product"/> that is deserialized from the XML string.</returns>
        Public Shared Function FromXml(ByVal xml As String) As Product
            Dim deserializer = New System.Runtime.Serialization.DataContractSerializer(GetType(Product))
            
            Using sr = New System.IO.StringReader(xml)
                Using reader = System.Xml.XmlReader.Create(sr)
                    Return TryCast(deserializer.ReadObject(reader), Product)
                End Using
            End Using
        End Function

        ''' <summary>
        ''' Deserializes an instance of <see cref="Product"/>.
        ''' </summary>
        ''' <param name="buffer">The byte array representing a <see cref="Product"/> instance.</param>
        ''' <returns>An instance of <see cref="Product"/> that is deserialized from the byte array.</returns>
        Public Shared Function FromBinary(ByVal buffer As Byte()) As Product
            Dim deserializer = New System.Runtime.Serialization.DataContractSerializer(GetType(Product))

            Using ms = New System.IO.MemoryStream(buffer)
                Using reader = System.Xml.XmlDictionaryReader.CreateBinaryReader(ms, System.Xml.XmlDictionaryReaderQuotas.Max)
                    Return TryCast(deserializer.ReadObject(reader), Product)
                End Using
            End Using
        End Function
#End Region

#Region "Clone"
        ''' <summary>
        ''' Creates a new object that is a copy of the current instance.
        ''' </summary>
        ''' <returns>
        ''' A new object that is a copy of this instance.
        ''' </returns>
        Private Function ICloneable_Clone() As Object Implements ICloneable.Clone
            Dim serializer As New System.Runtime.Serialization.DataContractSerializer([GetType]())
            Using ms As New System.IO.MemoryStream()
                serializer.WriteObject(ms, Me)
                ms.Position = 0
                Return serializer.ReadObject(ms)
            End Using
        End Function

        ''' <summary>
        ''' Creates a new object that is a copy of the current instance.
        ''' </summary>
        ''' <returns>
        ''' A new object that is a copy of this instance.
        ''' </returns>
        ''' <remarks>
        ''' This method is equivalent to a Detach from the current <see cref="System.Data.Linq.DataContext"/>.
        ''' Only loaded EntityRef and EntitySet child accessions will be cloned.
        ''' </remarks>
        Public Function Clone() As Product
            Return DirectCast(DirectCast(Me, ICloneable).Clone(), Product)
        End Function
#End Region

#Region "Detach Methods"
        ''' <summary>
        ''' Detach this instance from the <see cref="System.Data.Linq.DataContext"/>.
        ''' </summary>
        ''' <remarks>
        ''' Detaching the entity will allow it to be attached to another <see cref="System.Data.Linq.DataContext"/>.
        ''' </remarks>
        Public Overrides Sub Detach()

            If (Not IsAttached()) Then
                Return
            End If

            MyBase.Detach()
        End Sub
#End Region
    End Class
End Namespace

